<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAA7pJREFUaEPt
        mctr1UAUxosvFFHBx06FggrufKCIIiruBBcuqoIPbJNcBVfiQpfd+dq3G0VBRSko2DzaItr6AoWKL9Si
        4J8g2JpJpe2N58SvdTKZ3t5HkrZwf3A2OSfnm5ObOZmZ21CnzgylsW0olA2XZw/1AvKmYAdrTccvmK64
        S9avFsDXTEfcsTzfMj2xGrdNL00d4VwazBEa3DOyIhkPNDJNAbKN0X29hiOaWlvDOUiXL0ZXsJ8GMqAM
        bMKmKEC2AbPLP4C02XOuI1xkukE7CceeuGoVFAAL2lt7w3mQyYZmb2gVifUnxSPjgvosR1ww7WBvogAn
        2E2DvEgxiddt3CzX7yk8/rkMculSsAdXksBnjfCo5fg3jO7hdQiNUAvA5QiONVz/Jt07puRi+3DMC5ci
        NB1O9YYLKfEbRYgs+GS5vzchLEapAsYp2P4W6kzfk3mFnerkpp+/TSfC8wEhVXPy4eAK7khqfssVVxBS
        G+g2seSGG3iF/nA+QmqG2vECytun6BSpsB0IqY6oz7viazyx/+VET7gYIanBc4zy/5C16DvxAu7qwEdK
        GrwYMTx/M9ypQx1sJ2nEOpRli0NwVw4leCUn414NV2aQzoO4pngJV2Vwq6Ob5adRVFtlFpjOn42qrtkZ
        NMJdPvSun5WShNwp4Moc0nsua9P35wxc5WN44p6chAo4D1fmRF9zWZtWsXCVD934Tk5CBe2CK3P+LTuk
        Amj5Aldp1K/nZIbw1NFp6QzhSXTBOkN46ui0dIbwJLpgnSE8dXRaOkN4El2wzhCeOjotnSG8NLSYei9P
        pFkxiWVmVBt1xW24ymc6P2S8iJO1+SQDrvLBUuJ/ATktJSx3eANrybp8ZAN3ZRiueC0lIstjMedflzVr
        WlLTZDouJyPLdjnd5W8jjVFZk+bDUbgrR7uhoT0sbwMRkhq6DQ3vuWveG+u2lNRin6a5peRc3CQUnaLl
        BXsQUhuWJ64pydmeGN2/liOkajgHPxA1P7XxywipnehVcgI3IeKKb6bjb0VYjHK+njyfcjlWYfjEjN7J
        jxoxbnn3uf0hNKJUAaft4fWm59+i+xIHW7wCSP1gaxxObLmBo4rCeDDR0WKLE+xTC+Br9AD4aJF3W7GN
        u2SdLY/CJZDLBnSmq2STDSIytQBdjGSc61KuR+2GLbaTKB/U6gZUSQED/Osgbf7QRDxIg+BTtdj7PEUB
        0R8c9L4f5l8UqaaX5h6xZuIvJk+81RQw8RcTx+K2mYtaAC7PHuoF1KmTBw0NfwGd8n5ZTeWzOQAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>